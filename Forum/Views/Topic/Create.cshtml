@using Microsoft.AspNet.Identity;
@model Forum.Models.CreateTopicViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Nowy temat w @Model.Forum.Name</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
        {
            <div class="alert alert-danger" role="alert">
                <a class="close" data-dismiss="alert">×</a>
                @foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
                {
                    <p>@modelError.ErrorMessage</p>
                }
            </div>
        }

        <!-- ukryte pole na ID forum do którego dodawany jest temat -->
        @Html.HiddenFor(model => Model.Forum.ID, "ForumID")
        @Html.HiddenFor(model => Model.Forum.Name, "Name")

        <div class="form-group">
            @Html.LabelFor(model => model.Topic.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Topic.Title, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Topic.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Topic.Description, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Post.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Post.Content, new { htmlAttributes = new { @class = "form-control", @rows = 20 } })
            </div>
        </div>

        @if (User.Identity.IsAuthenticated && this.User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Topic.IsGlued, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.Topic.IsGlued, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Topic.IsGlued, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
